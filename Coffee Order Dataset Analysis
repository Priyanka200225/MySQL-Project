	/* Month wise Total Order*/

	select count(distinct(o.order_id)) as TotalOrders, date_format(o.order_date,'%Y-%m')as ordermonth
	from orders as o
	group by ordermonth
	order by ordermonth asc;

	/* Month wise Total Buyers*/

	select count(distinct(customer_id)) as total_buyer, date_format(order_date , '%Y-%m') as order_month
	from orders
	group by order_month
	order by order_month;

	/*Month wise Total sales value*/
	SELECT DIstinct date_format(O.ORDER_DATE, '%Y-%m') as ordermonth, round(sum((O.QUANTITY * P.UNIT_PRICE)),0) AS TOTAL_VALUE
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY  ordermonth
	ORDER BY ordermonth asc, TOTAL_VALUE desc;


	/*Month wise Total Profit value*/
	select round(sum((p.profit*o.quantity)),0) as total_profit , date_format(o.order_date, '%Y-%m') as order_month
	from orders as o
	left join products as p
	on o.product_id = p.product_id
	group by order_month
	order by order_month ,total_profit desc;

	/* we find distinct coffee type*/
	select distinct(Coffee_Type)
	from products;

	/* Coffee Type wise Total order*/
	select distinct(p.coffee_type) as coffee_type,  count(distinct(o.order_id)) as total_order
	from orders as o
	left join products as p
	on o.Product_ID = p.Product_ID
	group by coffee_type
	order by total_order;


	/* Coffee Type wise Total Buyer*/
	SELECT DISTINCT(P.COFFEE_TYPE) AS COFFEE_TYPE, COUNT(DISTINCT(O.CUSTOMER_ID)) AS TOTAL_BUYER
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY COFFEE_TYPE
	ORDER BY TOTAL_BUYER DESC;


	/* COFFEE TYPE WISE TOTAL BUYER ON THE BASIS OF YEAR*/
	SELECT DISTINCT(P.COFFEE_TYPE) AS COFFEE_TYPE, COUNT(DISTINCT(O.CUSTOMER_ID)) AS TOTAL_BUYER, date_format(o.order_date, '%Y') AS ORDER_YEAR
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY COFFEE_TYPE, ORDER_YEAR
	ORDER BY ORDER_YEAR ASC;


	/*YEAR ON YEAR TOTAL ORDER OF COFFEE TYPE*/
	SELECT DISTINCT(P.COFFEE_TYPE) AS COFFEE_TYPE, COUNT(DISTINCT(O.order_id)) AS TOTAL_ORDER, date_format(o.order_date, '%Y') AS ORDER_YEAR
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY COFFEE_TYPE, ORDER_YEAR
	ORDER BY ORDER_YEAR ASC;

	/*WE FIND YEAR ON YEAR TOTAL_BUYER, TOTAL_ORDER, TOTAL_PROFIT, TOTAL_SALES_VALUE BY COFFEE_TYPE*/
	SELECT DISTINCT(P.COFFEE_TYPE) AS COFFEE_TYPE, 
	date_format(o.order_date, '%Y') AS ORDER_YEAR, 
	COUNT(DISTINCT(O.order_id)) AS TOTAL_ORDER,
	COUNT(DISTINCT(o.customer_id)) AS  TOTAL_BUYER,
	 ROUND(SUM(O.QUANTItY* P.UNIT_price),0) as TOTAL_SALES_VALUE,
	 round(sum(p.profit*o.quantity),0) as TOTAL_PROFIT
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY COFFEE_TYPE, ORDER_YEAR
	ORDER BY ORDER_YEAR ASC;

	/* WE FIND COUNTRY WISE TOTAL ORDER, TOTAL BUYER, TOTAL SALES VALUE, AND TOTAL PROFIT BY COFFEE TYPE ON YEAR BASIS*/
	SELECT DISTINCT(P.COFFEE_TYPE) AS COFFEE_TYPE, 
	date_format(o.order_date, '%Y') AS ORDER_YEAR, 
	COUNT(DISTINCT(O.order_id)) AS TOTAL_ORDER,
	COUNT(DISTINCT(o.customer_id)) AS  TOTAL_BUYER,
	 ROUND(SUM(O.QUANTItY* P.UNIT_price),0) as TOTAL_SALES_VALUE,
	 round(sum(p.profit*o.quantity),0) as TOTAL_PROFIT,
	 C.COUNTRY AS COUNTRY
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	left join CUSTOMERS as C
	ON O.CUSTOMER_ID = C.CUSTOMER_ID
	GROUP BY COFFEE_TYPE, ORDER_YEAR, COUNTRY;


	/* WE FIND COUNTRY WISE AND CITY WISE TOTAL ORDER, TOTAL BUYER, TOTAL SALES VALUE, AND TOTAL PROFIT BY COFFEE TYPE ON YEAR BASIS*/
	SELECT DISTINCT  C.CITY AS CITY,
	 C.COUNTRY AS COUNTRY, P.COFFEE_TYPE AS COFFEE_TYPE, 
	date_format(o.order_date, '%Y') AS ORDER_YEAR, 
	COUNT(DISTINCT(O.order_id)) AS TOTAL_ORDER,
	COUNT(DISTINCT(o.customer_id)) AS  TOTAL_BUYER,
	 ROUND(SUM(O.QUANTItY* P.UNIT_price),0) as TOTAL_SALES_VALUE,
	 round(sum(p.profit*o.quantity),0) as TOTAL_PROFIT
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	left join CUSTOMERS as C
	ON O.CUSTOMER_ID = C.CUSTOMER_ID
	GROUP BY COFFEE_TYPE, ORDER_YEAR
	ORDER BY ORDER_YEAR;

	/* WE FIND ORDER ID OF THOSE WHO HAS BOUGHT COFFEE TYPE "ROB" AND ROAST TYPE "M"*/
	SELECT DISTINCT(O.ORDER_ID), P.COFFEE_TYPE, P.ROAST_TYPE
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	WHERE P.COFFEE_TYPE ='ROB' AND ROAST_TYPE = 'M';

	/* we find roast type wise and coffee type wise TOTAL PROFIT AND TOTAL_SALES_VALUE for each*/
	SELECT A.*
	FROM(select SUM(o.quantity* p.profit) as total_profit,
	SUM(O.QUANTITY*P.UNIT_PRICE) AS TOTAL_SALES_VALUE,
	roast_type, coffee_type, dense_rank()OVER(PARTITION BY COFFEE_TYPE ORDER BY total_profit,TOTAL_SALES_VALUE) AS DR
	from products as p
	left join orders as o
	on p.product_id = o.product_id
	group by roast_type, coffee_type
	ORDER BY total_profit desc, TOTAL_SALES_VALUE DESC) AS A
	WHERE DR= 1 ;


	/* WE FIND HIGHEST SALES FOR EACH ROAST TYPE AND FOR EACH COFFEE TYPE*/
	select a.*
	from 
	(SELECT ROUND(SUM(O.QUANTITY* P.UNIT_PRICE),0) AS TOTAL_HIGHEST_SALES,
	COFFEE_TYPE, P.ROAST_TYPE, dense_rank() over(partition by coffee_type order by TOTAL_HIGHEST_SALES) as dr
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	GROUP BY  P.COFFEE_TYPE, P.ROAST_TYPE
	ORDER BY P.COFFEE_TYPE, P.ROAST_TYPE) as a
	where dr=1;

	/* WE FIND ORDER YEAR ON THE BASIS OF HIGHEST PROFIT TO KNOW WHICH COFFEE TYPE WITH WHICH ROAST TYPE WAS ON TREND ON THAT PARTICULAR YEAR*/
	SELECT a.HIGHEST_PROFIT,a.ORDER_YEAR, a.COFFEE_TYPE, a.ROAST_TYPE
	FROM(
	SELECT date_format(ORDER_DATE, '%Y') AS ORDER_YEAR, 
	round(SUM(P.PROFIT*O.QUANTITY),0) AS HIGHEST_PROFIT,
	P.COFFEE_TYPE, P.ROAST_TYPE, DENSE_RANK() OVER  (PARTITION BY P.COFFEE_TYPE ORDER BY HIGHEST_PROFIT) AS DR
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON P.PRODUCT_ID = O.PRODUCT_ID
	group by P.COFFEE_TYPE, P.ROAST_TYPE
	ORDER BY ORDER_DATE ASC, HIGHEST_PROFIT DESC) AS a
	WHERE DR= 1;


	/*WE FIND WHICH COUNTRY BUYS MOST OF WHICH COFFEE TYPE IN RESPECT OF ROAST TYPE*/
	SELECT a.TOTAL_SALES_VALUE, a.COFFEE_TYPE, a.ROAST_TYPE, a.COUNTRY
	from
	(SELECT ROUND(SUM(O.QUANTITY* P.UNIT_PRICE ),0) AS TOTAL_SALES_VALUE,
	P.COFFEE_TYPE, P.ROAST_TYPE, C.COUNTRY, DENSE_RANK() OVER(partition by country ORDER BY TOTAL_SALES_VALUE DESC) AS RN
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	LEFT JOIN CUSTOMERS AS C
	ON O.CUSTOMER_ID = C.CUSTOMER_ID
	GROUP BY P.COFFEE_TYPE, P.ROAST_TYPE, C.COUNTRY
	ORDER BY TOTAL_SALES_VALUE DESC, P.ROAST_TYPE) as a
	where a.rn= 1;

	/*YEAR SALES VALUE OF BUYER WHOSE SALES VALUE IS GREATER THAN 100 */
	SELECT DISTINCT C.CUSTOMER_ID, ROUND(SUM(O.QUANTITY*P.UNIT_PRICE),0) AS TOTAL_SALES_VALUE,
	DATE_FORMAT(ORDER_DATE, '%Y') AS YEAR
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	LEFT JOIN CUSTOMERS AS C
	ON O.CUSTOMER_ID = C.CUSTOMER_ID
	GROUP BY CUSTOMER_ID
	HAVING TOTAL_SALES_VALUE >100
	ORDER BY  YEAR ASC, TOTAL_SALES_VALUE DESC ;

	/*BUYERS FIRST ORDER DATE FOR THAT PARTICULAR DATE*/
	SELECT DISTINCT CUSTOMER_ID,  ORDER_ID ,
	MIN(DATE_FORMAT(ORDER_DATE,'%d-%m-%Y') ) AS FIRST_ORDER_DATE
	FROM ORDERS
	GROUP BY CUSTOMER_ID;

	/*BUYERS LAST ORDER DATE FOR THAT PARTICULAR DATE*/
	SELECT DISTINCT CUSTOMER_ID,  ORDER_ID ,
	MAX(DATE_FORMAT(ORDER_DATE,'%d-%m-%Y') ) AS FIRST_ORDER_DATE
	FROM ORDERS
	GROUP BY CUSTOMER_ID;

	

	/*TOTAL BUYERS OF THE COUNTRY WHERE BUYERS PURCHASE ALL COFFEE TYPE*/

	SELECT COUNT(DISTINCT(o.customer_id) ) AS TOTAL_BUYERS, P.COFFEE_TYPE, C.COUNTRY
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	LEFT JOIN CUSTOMERS AS C
	ON O.CUSTOMER_ID = C.CUSTOMER_ID
	GROUP BY P.COFFEE_TYPE, C.COUNTRY
	ORDER BY TOTAL_BUYERS desc;


	/* FIND TOTAL ORDERS, TOTAL SALES VALUE, TOTAL PROFIT, TOTAL BUYERS OF 2019YEAR.*/
	SELECT CUSTOMER_ID, COUNT(DISTINCT(ORDER_ID)) AS TOTAL_ORDERS, 
	COUNT(DISTINCT(CUSTOMER_ID)) AS TOTAL_BUYERS,
	ROUND(SUM(O.QUANTITY* P.PROFIT)) AS TOTAL_PROFIT,
	ROUND(SUM(O.QUANTITY* P.UNIT_PRICE)) AS TOTAL_SALES_VALAUE,
	DATE_FORMAT(ORDER_DATE,'%Y') AS ORDER_YEAR 
	FROM ORDERS AS O
	LEFT JOIN PRODUCTS AS P
	ON O.PRODUCT_ID = P.PRODUCT_ID
	WHERE DATE_FORMAT(ORDER_DATE,'%Y') = 2019
	GROUP BY CUSTOMER_ID
	ORDER BY TOTAL_ORDERS desc, TOTAL_BUYERS desc , TOTAL_PROFIT desc, TOTAL_SALES_VALAUE desc;



	/*year on year growth */
	with year_value as (
	select distinct
	date_format(o.order_date, '%Y') as order_year,
	round(sum(o.quantity* p.unit_price),0) as total_sales_values
	FROM ORDERS AS o
	LEFT JOIN PRODUCTS AS p
	ON o.PRODUCT_ID = p.PRODUCT_ID
	GROUP BY   order_year)

	select order_year, total_sales_values,
	  lag( total_sales_values) over (order by order_year) as previous_total_sales_values,
	concat(  round((((
	 total_sales_values -  lag( total_sales_values) over (order by order_year) )/ total_sales_values ) *100 ),0) , ' %')
	 as growth_percentage
	from year_value;

	select * 
	from year_value;


/*we calculated year on year Total Sales and categorised performance based on conditions*/
select date_format(o.order_date,'%Y') as order_date, round(sum((o.quantity*p.unit_price)),0) as total_sales_value,
case when  round(sum((o.quantity*p.unit_price)),0) >= 13000 then 'Excellent_Performance'
when  round(sum((o.quantity*p.unit_price)),0) <13000 and round(sum((o.quantity*p.unit_price)),0) >8000 then 'Average_Performance'
else 'Bad_Performance' end as Performance
from orders as o
left join products as p
on o.product_id = p.product_id
group by date_format(o.order_date,'%Y');

/*we calculated year on year Total Profit and categorised performance based on conditions*/
select date_format(o.order_date,'%Y') as order_date,  round(sum((o.quantity*p.profit)),0) as total_profit_value,
case when  round(sum((o.quantity*p.profit)),0) >= 1300 then 'Excellent_Performance'
when   round(sum((o.quantity*p.profit)),0) <1300 and  round(sum((o.quantity*p.profit)),0) >800 then 'Average_Performance'
else 'Bad_Performance' end as Performance
from orders as o
left join products as p
on o.product_id = p.product_id
group by date_format(o.order_date,'%Y');
